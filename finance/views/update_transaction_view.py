from datetime import datetime
import os

from django.shortcuts import render
from django.http import HttpRequest, HttpResponseRedirect
from django.views import View
from django.utils.decorators import method_decorator
from django.contrib.auth.decorators import login_required

from finance.models import TransactionMap, TransactionType, Transaction


@method_decorator(login_required, name="dispatch")
class UpdateTransactionView(View):

    def post(self, request: HttpRequest):
        # transaction id
        transaction_id = (
            int(request.POST["transaction_selector"])
            if "transaction_selector" in request.POST and request.POST["transaction_selector"] not in ["", "None"]
            else None
        )

        transaction_type_name = (
            str(request.POST["transaction_type_selector"])
            if "transaction_type_selector" in request.POST and request.POST["transaction_type_selector"] != ""
            else None
        )

        # get the existing transaction. if the type is different, create a new transaction mapping with the suitable
        #    type and map this transaction to the transaction mapping
        transaction = Transaction.objects.get(id=transaction_id)

        if transaction.mapping.type.name != transaction_type_name:

            # create a new transaction mapping
            new_map = TransactionMap.objects.create(
                name=transaction.mapping.name,
                description="Autogenerated Transaction Mapping",
                type=TransactionType.objects.get(name=transaction_type_name),
            )

            # map the transaction to the new map.
            transaction.mapping = new_map
            transaction.save()

        return HttpResponseRedirect("/transaction")
